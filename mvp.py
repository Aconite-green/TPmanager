# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mvp.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

# pyqt5-tools designer
# pyuic5 -x test.ui -o test.py

from PyQt5 import QtCore, QtGui, QtWidgets

import CanMsgSender, CanMsgReceiver
import can


class Ui_MainWindow(object):
    
    def setupUi(self, MainWindow):

        self.ch1bus = None
        self.ch2bus = None 

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.connect = QtWidgets.QPushButton(self.centralwidget)
        self.connect.setGeometry(QtCore.QRect(20, 10, 100, 100))
        font = QtGui.QFont()
        font.setFamily("Algerian")
        font.setPointSize(14)
        self.connect.setFont(font)
        self.connect.setStyleSheet("QPushButton {\n"
"    background-color: red;\n"
"    color: white;\n"
"    border: 2px solid black;\n"
"    border-radius: 50px; \n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: green;\n"
"}\n"
"")
        self.connect.setObjectName("connect")
        self.connect.clicked.connect(self.change_button_color)
        
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(20, 150, 751, 391))
        font = QtGui.QFont()
        font.setFamily("72 Black")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName("groupBox")
        
        self.send = QtWidgets.QPushButton(self.groupBox)
        self.send.setGeometry(QtCore.QRect(0, 70, 191, 71))
        self.send.setObjectName("send")
        
        self.send_line_edit = QtWidgets.QLineEdit(self.groupBox)
        self.send_line_edit.setGeometry(QtCore.QRect(0, 160, 341, 31))
        self.send_line_edit.setObjectName("send_line_edit")
        
        self.recv_text_edit = QtWidgets.QTextEdit(self.centralwidget)
        self.recv_text_edit.setGeometry(QtCore.QRect(420, 60, 361, 481))
        self.recv_text_edit.setObjectName("recv_text_edit")
        
        self.recieve_label = QtWidgets.QLabel(self.centralwidget)
        self.recieve_label.setGeometry(QtCore.QRect(420, 20, 91, 31))
        self.recieve_label.setObjectName("recieve_label")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.connect.setText(_translate("MainWindow", "Connect"))
        self.groupBox.setTitle(_translate("MainWindow", "GroupBox"))
        self.send.setText(_translate("MainWindow", "Send"))
        self.recieve_label.setText(_translate("MainWindow", "Recieve"))
    
    def change_button_color(self):
        # 현재 버튼의 스타일을 확인하여 색상 변경
        current_style = self.connect.styleSheet()
        
        if "red" in current_style:
            try:
                
                # 현재 빨간색이라면 녹색으로 변경
                self.open_bus()
                self.connect.setStyleSheet("QPushButton {\n"
                                           "    background-color: green;\n"
                                           "    color: white;\n"
                                           "    border: 2px solid black;\n"
                                           "    border-radius: 50px;\n"
                                           "}\n")
            except Exception as e:
                self.recv_text_edit.append(f"Connection failed: {e}")
        else:
            # 현재 녹색이라면 빨간색으로 변경
            
            self.close_bus()
            self.connect.setStyleSheet("QPushButton {\n"
                                    "background-color: red;\n"
                                    "color: white;\n"
                                    "border: 2px solid black;\n"
                                    "border-radius: 50px;\n"
                                   "}\n")
    def open_bus(self):

        if not self.ch1bus:
            try:
                self.ch1bus = can.interface.Bus(interface='vector', channel=0, bitrate=500000, fd=True, app_name=None,
                                                data_bitrate=2000000, sjw_abr=32,
                                                tseg1_abr=127, tseg2_abr=32, sam_abr=1, sjw_dbr=10, tseg1_dbr=29,
                                                tseg2_dbr=10, output_mode=1)
            except Exception as e:
                self.recv_text_edit.append(f"connection failed: {e}")
        
        if not self.ch2bus:
            try:
                self.ch2bus = can.interface.Bus(interface='vector', channel=1, bitrate=500000, fd=True, app_name=None,
                                                data_bitrate=1000000, sjw_abr=32,
                                                tseg1_abr=127, tseg2_abr=32, sam_abr=1, sjw_dbr=10, tseg1_dbr=29,
                                                tseg2_dbr=10, output_mode=1)
            except Exception as e:
                self.recv_text_edit.append(f"connection failed: {e}")

        self.recv_text_edit.append(f"Bus connected.")

    def close_bus(self):
        if self.ch1bus:
            try:
                self.ch1bus.shutdown()
                self.ch1bus = None
            except Exception as e:
                self.recv_text_edit.append(f"Disconnection failed: {e}")
        if self.ch2bus:
            try:
                self.ch2bus.shutdown()
                self.ch2bus = None
            except Exception as e:
                self.recv_text_edit.append(f"Disconnection failed: {e}")
        
        self.recv_text_edit.append("Bus disconnected.")
    
    
    def __del__(self):
        if self.ch1bus:
            self.ch1bus.shutdown()
        if self.ch2bus:
            self.ch2bus.shutdown()


        
        



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
